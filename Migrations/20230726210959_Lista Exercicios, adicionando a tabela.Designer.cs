// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ResolverQuestao.Context;

#nullable disable

namespace ResolverQuestao.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230726210959_Lista Exercicios, adicionando a tabela")]
    partial class ListaExerciciosadicionandoatabela
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ExercicioListaExercicio", b =>
                {
                    b.Property<int>("ExerciciosExercicioId")
                        .HasColumnType("int");

                    b.Property<int>("ListaExerciciosListaExercicioId")
                        .HasColumnType("int");

                    b.HasKey("ExerciciosExercicioId", "ListaExerciciosListaExercicioId");

                    b.HasIndex("ListaExerciciosListaExercicioId");

                    b.ToTable("ExercicioListaExercicio");
                });

            modelBuilder.Entity("ResolverQuestao.Models.Alternativa", b =>
                {
                    b.Property<int>("AlternativaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ExercicioId")
                        .HasColumnType("int");

                    b.Property<string>("Texto")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("AlternativaId");

                    b.HasIndex("ExercicioId");

                    b.ToTable("Alternativas");
                });

            modelBuilder.Entity("ResolverQuestao.Models.Exercicio", b =>
                {
                    b.Property<int>("ExercicioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Enunciado")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Explicacao")
                        .HasColumnType("longtext");

                    b.Property<string>("MaterialSuporte")
                        .HasColumnType("longtext");

                    b.Property<string>("Resposta")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ExercicioId");

                    b.ToTable("Exercicios");
                });

            modelBuilder.Entity("ResolverQuestao.Models.ListaExercicio", b =>
                {
                    b.Property<int>("ListaExercicioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("MaterialSuporte")
                        .HasColumnType("longtext");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ListaExercicioId");

                    b.ToTable("ListaExercicios");
                });

            modelBuilder.Entity("ExercicioListaExercicio", b =>
                {
                    b.HasOne("ResolverQuestao.Models.Exercicio", null)
                        .WithMany()
                        .HasForeignKey("ExerciciosExercicioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ResolverQuestao.Models.ListaExercicio", null)
                        .WithMany()
                        .HasForeignKey("ListaExerciciosListaExercicioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ResolverQuestao.Models.Alternativa", b =>
                {
                    b.HasOne("ResolverQuestao.Models.Exercicio", null)
                        .WithMany("Alternativas")
                        .HasForeignKey("ExercicioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ResolverQuestao.Models.Exercicio", b =>
                {
                    b.Navigation("Alternativas");
                });
#pragma warning restore 612, 618
        }
    }
}
